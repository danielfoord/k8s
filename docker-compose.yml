services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
      POSTGRES_DB: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d postgres_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - postgres_network
    depends_on:
      - postgres
    restart: unless-stopped

  deno-api:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: deno_api
    develop:
      watch:
        - action: sync+restart
          path: ./app
          target: /app
        - action: sync+restart
          path: ./main.ts
          target: /main.ts
        - action: rebuild
          path: deno.json
    ports:
      - "8888:8888"
    volumes:
      - ./prisma:/app/prisma # Changed: specifically mounting prisma directory
      - deno-cache:/deno-dir # Changed: simplified volume mapping
    networks:
      - postgres_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
      POSTGRES_DB: postgres_db
      POSTGRES_HOST: postgres_db
      DATABASE_URL: postgresql://admin:adminpassword@postgres_db:5432/k8s-test?schema=public
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  postgres_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  deno-cache:
