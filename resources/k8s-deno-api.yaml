apiVersion: batch/v1
kind: Job
metadata:
  name: prisma-migrate
spec:
  template:
    spec:
      containers:
        - name: prisma-migrate
          image: k8-test-deno-api:latest
          imagePullPolicy: Never
          workingDir: /app
          command: ["/bin/sh", "-c"]
          args:
            - |
                echo "Starting migration..."
                npx prisma migrate deploy --schema=./prisma/schema.prisma
                echo "Migration completed successfully"
          envFrom:
            - configMapRef:
                name: app-config
      restartPolicy: Never
  backoffLimit: 4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deno-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deno-api
  template:
    metadata:
      labels:
        app: deno-api
    spec:
      initContainers:
        - name: prisma-migrate
          image: k8-test-deno-api:latest
          imagePullPolicy: Never
          workingDir: /app
          command: ["/bin/sh", "-c"]
          args:
            - |
                echo "Starting migration..."
                npx prisma migrate deploy --schema=./prisma/schema.prisma
                echo "Migration completed successfully"
          envFrom:
            - configMapRef:
                name: app-config
      containers:
        - name: deno-api
          image: k8-test-deno-api:latest
          imagePullPolicy: Never
          workingDir: /app
          command: ["deno"]
          args: ["task", "dev"]
          ports:
            - containerPort: 8888
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secrets
          livenessProbe:
            httpGet:
              path: /health
              port: 8888
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: deno-api-service
spec:
  selector:
    app: deno-api
  ports:
    - protocol: TCP
      port: 8884
      targetPort: 8888
  type: LoadBalancer
